$CATEGORY: 05_docker_run/1_knowledge

::05k001:: [markdown] Какая команда используется для построения образа?
{
  =[markdown] `docker image build`
  ~[markdown] `docker create`
  ~[markdown] `docker image run`
  ~[markdown] `docker image start`
}

::05k002:: [markdown] Какая команда используется для отображения списка существующих образов?
{
  =[markdown] `docker image ls`
  ~[markdown] `docker image show`
  ~[markdown] `docker view`
  ~[markdown] `docker list`
}

::05k003:: [markdown] Какая команда используется для удаления образа?
{
  =[markdown] `docker image rm`
  ~[markdown] `docker delete`
  ~[markdown] `docker remove`
  ~[markdown] `docker remove image`
}

::05k004:: [markdown] Какая команда используется для создания контейнера?
{
  =[markdown] `docker container create`
  ~[markdown] `docker image build`
  ~[markdown] `docker container build`
  ~[markdown] `docker container start`
}

::05k005:: [markdown] Какая команда используется для запуска существующего контейнера?
{
  =[markdown] `docker container start`
  ~[markdown] `docker container run`
  ~[markdown] `docker container create`
  ~[markdown] `docker container build`
}

::05k006:: [markdown] При помощи какой команды можно взаимодействовать с контейнером
{
  =[markdown] `docker container exec`
  ~[markdown] `docker container run`
  ~[markdown] `docker container start`
  ~[markdown] `docker container stop`
}

::05k007:: [markdown] Какой командой можно перезапустить контейнер?
{
  =[markdown] `docker container restart`
  ~[markdown] `docker container start`
  ~[markdown] `docker container run`
  ~[markdown] `docker container stop`
}

::05k008:: [markdown] Какой командой можно переписать файл в контейнер?
{
  =[markdown] `docker container cp`
  ~[markdown] `docker container mv`
  ~[markdown] `docker container copy`
  ~[markdown] `docker container move`
}

::05k009:: [markdown] Какая команда используется для чтения логов контейнера?
{
  =[markdown] `docker container logs`
  ~[markdown] `docker container show`
  ~[markdown] `docker container view`
  ~[markdown] `docker container list`
}

::05k010:: [markdown] Какая команда используется для просмотра списка контейнеров?
{
  =[markdown] `docker container ls`
  ~[markdown] `docker ls container`
  ~[markdown] `docker container view`
  ~[markdown] `docker image list`
}

::05k011:: [markdown] Какая команда используется для остановки контейнера?
{
  =[markdown] `docker container stop`
  ~[markdown] `docker stop container`
  ~[markdown] `docker container remove`
  ~[markdown] `docker container delete`
}

::05k012:: [markdown] Какая команда используется для удаления контейнера?
{
  =[markdown] `docker container rm`
  ~[markdown] `docker remove container`
  ~[markdown] `docker container delete`
  ~[markdown] `docker container prune`
}

::05k013:: [markdown] Пусть дан файл `Dockerfile.sample`. Какая команда используется для построения образа с именем `myimage`?
{
  =[markdown] `docker image build -t myimage -f Dockerfile.sample .`
  ~[markdown] `docker image build -t myimage Dockerfile.sample`
  ~[markdown] `docker image build --name myimage --file Dockerfile.sample .`
  ~[markdown] `docker build -f Dockerfile.sample -t myimage`
}

::05k014:: [markdown] Пусть дан образ `myimage:1.0`. Какая команда используется для создания контейнера с именем `mycontainer`?
{
  =[markdown] `docker container create --name mycontainer myimage:1.0`
  ~[markdown] `docker container create --name myimage:1.0 mycontainer`
  ~[markdown] `docker create --name mycontainer myimage .`
  ~[markdown] `docker build --name mycontainer myimage:1.0`
}

::05k015:: [markdown] Пусть дан контейнер `mycontainer`. Какая команда используется для запуска контейнера в фоновом режиме?
{
  =[markdown] `docker start -d mycontainer`
  ~[markdown] `docker run --background mycontainer`
  ~[markdown] `docker run -d --name mycontainer`
  ~[markdown] `docker start -d --name mycontainer`
}

::05k016:: [markdown] Пусть дан запущенный контейнер `mycontainer`. Какая команда используется для подключения к контейнеру с командой `/bin/bash` для взаимодействия с оболочкой?
{
  =[markdown] `docker exec -it mycontainer /bin/bash`
  ~[markdown] `docker run mycontainer /bin/bash`
  ~[markdown] `docker start mycontainer /bin/bash`
  ~[markdown] `docker container exec mycontainer /bin/bash`
}

::05k017:: [markdown] Пусть дан запущенный контейнер `mycontainer`. Какая команда используется для чтения последних 50 строк журналов контейнера?
{
  =[markdown] `docker logs -n 50 mycontainer`
  ~[markdown] `docker container logs -f 50 mycontainer`
  ~[markdown] `docker container show 50 mycontainer`
  ~[markdown] `docker logs -f 50 mycontainer`
}

::05k018:: [markdown] Пусть дан запущенный контейнер `mycontainer`. Какая команда используется для остановки контейнера?
{
  =[markdown] `docker stop mycontainer`
  ~[markdown] `docker container stop mycontainer`
  ~[markdown] `docker container rm mycontainer`
  ~[markdown] `docker container delete mycontainer`
}

::05k019:: [markdown] Дан образ `myimage`. Какой командой можно запустить контейнер с именем `mycontainer` и перенаправлением порта `8080` на порт `80`?
{
  =[markdown] `docker container run -d --name mycontainer -p 8080:80 myimage`
  ~[markdown] `docker run -d --name mycontainer --ports 8080:80 myimage`
  ~[markdown] `docker run --name mycontainer -p 8080 myimage`
  ~[markdown] `docker run -d --name mycontainer --expose 8080:80 myimage`
}

::05k020:: [markdown] Дан запущенный контейнер `mycontainer`. Какой командой можно скопировать файл `file.txt` в корень контейнера?
{
  =[markdown] `docker container cp file.txt mycontainer:/`
  ~[markdown] `docker image cp mycontainer:/file.txt .`
  ~[markdown] `docker cp mycontainer:/file.txt /`
  ~[markdown] `docker container write file.txt mycontainer:/file.txt`
}
